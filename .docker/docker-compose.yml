services:

  validator_server:
    build:
      context: ..
      dockerfile: ./docker/validator/Dockerfile
    image: validator_server
    container_name: validator_server
    command: python run.py validator_model_server
    environment:
      OPEN_ROUTER_API_KEY: ${OPEN_ROUTER_API_KEY}
      MAX_TRIES: 1
    restart: unless-stopped
    networks:
      - solidity-audit

  miner_server:
    build:
      context: ..
      dockerfile: ./docker/miner/Dockerfile
    image: miner_server
    container_name: miner_server
    environment:
      SERVER_PORT: 5000
      MAX_TRIES: 3
    command: python run.py miner_model_server
    restart: unless-stopped
    networks:
      - solidity-audit

  miner:
    build:
      context: ..
      dockerfile: ./docker/neuron/Dockerfile
    image: miner
    container_name: miner
    command: python run.py miner
    environment:
      MNEMONIC_HOTKEY: ${MINER_HOTKEY_MNEMONIC}
      NETWORK_TYPE: ${NETWORK_TYPE}
      CHAIN_ENDPOINT: ${CHAIN_ENDPOINT}
      EXTERNAL_IP: ${EXTERNAL_IP}
      MODEL_SERVER: 'http://miner_server:5000'
      BT_AXON_PORT: 8091
    ports:
      - 8091:8091
    restart: unless-stopped
    networks:
      - solidity-audit

  validator:
    build:
      context: ..
      dockerfile: ./docker/neuron/Dockerfile
    image: validator
    container_name: validator
    command: python run.py validator
    environment:
      MNEMONIC_HOTKEY: ${VALIDATOR_HOTKEY_MNEMONIC}
      NETWORK_TYPE: ${NETWORK_TYPE}
      CHAIN_ENDPOINT: ${CHAIN_ENDPOINT}
      VALIDATOR_TIME: ${VALIDATOR_TIME}
      MODEL_SERVER: 'http://validator_server:5000'
    restart: unless-stopped
    networks:
      - solidity-audit

networks:
  solidity-audit:
